問1
let rec gcd m n =
  if m <= 0 then n else
  if m <= n then gcd m (n - m) else gcd n (m - n) in
  print_int (gcd 21600 337500)
とりあえず全体を比べる。

末尾最適化あり
	j	_min_caml_start
gcd.7:
	slti	$s0, $a0, 1
	beq	$zero, $s0, bne_else.17
	add	$a0, $a1, $zero
	jr	$ra
bne_else.17:
	slt	$s0, $a1, $a0
	beq	$zero, $s0, bne_else.18
	sub	$a0, $a0, $a1
	add	$s6, $zero, $a1
	add	$a1, $zero, $a0
	add	$a0, $zero, $s6
	j	gcd.7
bne_else.18:
	sub	$a1, $a1, $a0
	j	gcd.7
_min_caml_start:
	addi	$sp, $sp, 4096
	addi	$gp, $gp, 8192
	addi	$a0, $zero, 21600
	lui	$a1, 5
	ori	$a1, $a1, 9820
	sw	$ra, 4($sp)
	addi	$sp, $sp, 8
	jal	gcd.7
	addi	$sp, $sp, -8
	lw	$ra, 4($sp)
	sw	$ra, 4($sp)
	addi	$sp, $sp, 8
	jal	min_caml_print_int
	addi	$sp, $sp, -8
	lw	$ra, 4($sp)

末尾最適化なし
	j	_min_caml_start
gcd.7:
	slti	$s0, $a0, 1
	beq	$zero, $s0, bne_else.17
	add	$a0, $a1, $zero
	jr	$ra
bne_else.17:
	slt	$s0, $a1, $a0
	beq	$zero, $s0, bne_else.18
	sub	$a0, $a0, $a1
	add	$s6, $zero, $a1
	add	$a1, $zero, $a0
	add	$a0, $zero, $s6
    sw $ra, 4($sp)
    addi $sp, $sp, 8
	jal gcd.7
    addi $sp, $sp, -8
    lw $ra, 4($sp)
    jr $ra
bne_else.18:
	sub	$a1, $a1, $a0
	sw $ra, 4($sp)
    addi $sp, $sp, 8
	jal gcd.7
    addi $sp, $sp, -8
    lw $ra, 4($sp)
    jr $ra
_min_caml_start:
	addi	$sp, $sp, 4096
	addi	$gp, $gp, 8192
	addi	$a0, $zero, 21600
	lui	$a1, 5
	ori	$a1, $a1, 9820
	sw	$ra, 4($sp)
	addi	$sp, $sp, 8
	jal	gcd.7
	addi	$sp, $sp, -8
	lw	$ra, 4($sp)
	sw	$ra, 4($sp)
	addi	$sp, $sp, 8
	jal	min_caml_print_int
	addi	$sp, $sp, -8
	lw	$ra, 4($sp)

主要な部分だけ比べる
例えば、  
gcd n (m - n)
の部分だけ比べると
最適化あり
bne_else.17:
	slt	$s0, $a1, $a0
	beq	$zero, $s0, bne_else.18
	sub	$a0, $a0, $a1
	add	$s6, $zero, $a1
	add	$a1, $zero, $a0
	add	$a0, $zero, $s6
	j	gcd.7
bne_else.17:
	slt	$s0, $a1, $a0
	beq	$zero, $s0, bne_else.18
	sub	$a0, $a0, $a1
	add	$s6, $zero, $a1
	add	$a1, $zero, $a0
	add	$a0, $zero, $s6
    sw $ra, 4($sp)
    addi $sp, $sp, 8
	jal gcd.7
    addi $sp, $sp, -8
    lw $ra, 4($sp)
    jr $ra
の様になる。
この部分は末尾再帰になっているので、gcd.7にそのままとぶようにすればいい。

問2

let rec ack x y =
    if x <= 0 then y + 1 else
    if y <= 0 then ack (x - 1) 1
    else           ack (x - 1) (ack x (y - 1)) in
print_int (ack 3 10)


CPS変換後

let rec ack2 x y k2 = k2
  (
  let rec f a = a in
  let rec ack x y k =
    k
    (if x <= 0 then y + 1 else
    if y <= 0 then ack (x - 1) 1 f
    else let rec g r = ack (x - 1) r f in ack x (y - 1) g)
    in ack x y f)
    in
    let rec pr r = print_int r
    in ack2 3 10 pr

おまけ　　　　
自作命令が入ってたりしたりしてややこしいので最後に結論書きました。

アセンブリ(CPS変換前)
	j	_min_caml_start
ack.15:
	slti	$s0, $a0, 1
	beq	$zero, $s0, bne_else.34
	addi	$a0, $a1, 1
	jr	$ra
bne_else.34:
	slti	$s0, $a1, 1
	beq	$zero, $s0, bne_else.35
	addi	$a0, $a0, -1
	addi	$a1, $zero, 1
	j	ack.15
bne_else.35:
	addi	$a2, $a0, -1
	addi	$a1, $a1, -1
	sw	$a2, 0($sp)
	sw	$ra, 4($sp)
	addi	$sp, $sp, 8
	jal	ack.15
	addi	$sp, $sp, -8
	lw	$ra, 4($sp)
	add	$a1, $a0, $zero
	lw	$a0, 0($sp)
	j	ack.15
_min_caml_start:
	addi	$sp, $sp, 4096
	addi	$gp, $gp, 8192
	addi	$a0, $zero, 3
	addi	$a1, $zero, 10
	sw	$ra, 4($sp)
	addi	$sp, $sp, 8
	jal	ack.15
	addi	$sp, $sp, -8
	lw	$ra, 4($sp)
	sw	$ra, 4($sp)
	addi	$sp, $sp, 8
	jal	min_caml_print_int
	addi	$sp, $sp, -8
	lw	$ra, 4($sp)

(CPS変換後)
	j	_min_caml_start
f.24:
	jr	$ra
g.33:
	lw	$a1, 12($s7)
	lw	$a2, 8($s7)
	lw	$s7, 4($s7)
	addi	$a1, $a1, -1
	add	$s6, $zero, $a1
	add	$a1, $zero, $a0
	add	$a0, $zero, $s6
	lw	$s6, 0($s7)
	jr	$s6
ack.26:
	lw	$a3, 4($s7)
	sw	$a2, 0($sp)
	sltia	$s0, $a0, 1
	beq	$zero, $s0, bne_else.63
	addi	$a0, $a1, 1
	j	bne_cont.64
bne_else.63:
	sltia	$s0, $a1, 1
	beq	$zero, $s0, bne_else.65
	addi	$a0, $a0, -1
	addi	$a1, $zero, 1
	add	$a2, $zero, $a3
	sw	$ra, 4($sp)
	addi	$sp, $sp, 8
	lw	$s6, 0($s7)
	lahi	$ra, tmp.67
	lalo	$ra, tmp.67
	jr	$s6
tmp.67:
	addi	$sp, $sp, -8
	lw	$ra, 4($sp)
	j	bne_cont.66
bne_else.65:
	add	$t0, $gp, $zero
	addi	$gp, $gp, 16
	lahi	$t1, g.33
	lalo	$t1, g.33
	sw	$t1, 0($t0)
	sw	$a0, 12($t0)
	sw	$a3, 8($t0)
	sw	$s7, 4($t0)
	addi	$a1, $a1, -1
	add	$a2, $zero, $t0
	sw	$ra, 4($sp)
	addi	$sp, $sp, 8
	lw	$s6, 0($s7)
	lahi	$ra, tmp.68
	lalo	$ra, tmp.68
	jr	$s6
tmp.68:
	addi	$sp, $sp, -8
	lw	$ra, 4($sp)
bne_cont.66:
bne_cont.64:
	lw	$s7, 0($sp)
	lw	$s6, 0($s7)
	jr	$s6
ack2.15:
	add	$a3, $gp, $zero
	addi	$gp, $gp, 8
	lahi	$t0, f.24
	lalo	$t0, f.24
	sw	$t0, 0($a3)
	add	$s7, $gp, $zero
	addi	$gp, $gp, 8
	lahi	$t0, ack.26
	lalo	$t0, ack.26
	sw	$t0, 0($s7)
	sw	$a3, 4($s7)
	sw	$a2, 0($sp)
	add	$a2, $zero, $a3
	sw	$ra, 4($sp)
	addi	$sp, $sp, 8
	lw	$s6, 0($s7)
	lahi	$ra, tmp.69
	lalo	$ra, tmp.69
	jr	$s6
tmp.69:
	addi	$sp, $sp, -8
	lw	$ra, 4($sp)
	lw	$s7, 0($sp)
	lw	$s6, 0($s7)
	jr	$s6
pr.19:
	j	min_caml_print_int
_min_caml_start:
	addi	$sp, $sp, 4096
	addi	$gp, $gp, 8192
	add	$a2, $gp, $zero
	addi	$gp, $gp, 8
	lahi	$a0, pr.19
	lalo	$a0, pr.19
	sw	$a0, 0($a2)
	addi	$a0, $zero, 3
	addi	$a1, $zero, 10
	sw	$ra, 4($sp)
	addi	$sp, $sp, 8
	jal	ack2.15
	addi	$sp, $sp, -8
	lw	$ra, 4($sp)


結論から言うとjalの個数が減っている。

