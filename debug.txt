Syntax
(LET z (INT 3)(LET a (LETREC f x (SUB (VAR x)(VAR z))(APP (VAR f)(INT 7)))(LET z (INT 2)(LET b (APP (VAR f)(INT 3))(APP (VAR print)(ADD (VAR a)(VAR b)))))))
KNormal
(LET z (INT 3)(LET a (LETREC f x (SUB x z)(LET Ti1 (INT 7)(APP f)Ti1)))(LET z (INT 2)(LET b (LET Ti2 (INT 3)(EXTFUNAPP f Ti2))(LET Ti3 (ADD a b)(EXTFUNAPP print Ti3))))))
Alpha
(LET z.4 (INT 3)(LET a.5 (LETREC f.10 x.11 (SUB x.11 z.4)(LET Ti1.12 (INT 7)(APP f.10)Ti1.12)))(LET z.6 (INT 2)(LET b.7 (LET Ti2.9 (INT 3)(EXTFUNAPP f Ti2.9))(LET Ti3.8 (ADD a.5 b.7)(EXTFUNAPP print Ti3.8))))))
kyoutuusakujogo
(LET z.4 (INT 3)(LET a.5 (LETREC f.10 x.11 (SUB x.11 z.4)(LET Ti1.12 (INT 7)(APP f.10)Ti1.12)))(LET z.6 (INT 2)(LET b.7 (LET Ti2.9 (INT 3)(EXTFUNAPP f Ti2.9))(LET Ti3.8 (ADD a.5 b.7)(EXTFUNAPP print Ti3.8))))))
after closure
f.10  args: x.11  fv: z.4  body: (SUB x.11 z.4)
(LET z.4 (INT 3)(MakeCls f.10 {entry: f.10  actual_fv z.4} (LET Ti1.12 (INT 7)(LET a.5 (AppCls f.10 Ti1.12)(LET Ti2.9 (INT 3)(LET b.7 (AppDir min_caml_f Ti2.9)(LET Ti3.8 (ADD a.5 b.7)(AppDir min_caml_print Ti3.8)))))))